/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var NoopNgxsExecutionStrategy = /** @class */ (function () {
    function NoopNgxsExecutionStrategy() {
    }
    /**
     * @template T
     * @param {?} func
     * @return {?}
     */
    NoopNgxsExecutionStrategy.prototype.enter = /**
     * @template T
     * @param {?} func
     * @return {?}
     */
    function (func) {
        return func();
    };
    /**
     * @template T
     * @param {?} func
     * @return {?}
     */
    NoopNgxsExecutionStrategy.prototype.leave = /**
     * @template T
     * @param {?} func
     * @return {?}
     */
    function (func) {
        return func();
    };
NoopNgxsExecutionStrategy.ɵfac = function NoopNgxsExecutionStrategy_Factory(t) { return new (t || NoopNgxsExecutionStrategy)(); };
NoopNgxsExecutionStrategy.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NoopNgxsExecutionStrategy, factory: function (t) { return NoopNgxsExecutionStrategy.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NoopNgxsExecutionStrategy, [{
        type: Injectable
    }], function () { return []; }, null); })();
    return NoopNgxsExecutionStrategy;
}());
export { NoopNgxsExecutionStrategy };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9vcC1uZ3hzLWV4ZWN1dGlvbi1zdHJhdGVneS5qcyIsInNvdXJjZXMiOlsibmc6L0BuZ3hzL3N0b3JlL3NyYy9leGVjdXRpb24vbm9vcC1uZ3hzLWV4ZWN1dGlvbi1zdHJhdGVneS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFJM0M7QUFDK0MsSUFEL0M7QUFDeUIsSUFRekIsQ0FBQztBQUNEO0FBQVE7QUFBbUI7QUFBdUI7QUFBbUI7QUFBUSxJQVIzRSx5Q0FBSztBQUFPO0FBQ1o7QUFHRDtBQUFtQjtBQUFRLElBSjFCLFVBQVMsSUFBYTtBQUFJLFFBQ3hCLE9BQU8sSUFBSSxFQUFFLENBQUM7QUFDbEIsSUFBRSxDQUFDO0FBRUg7QUFBUTtBQUFtQjtBQUUzQjtBQUVhO0FBQVEsSUFKbkIseUNBQUs7QUFBTztBQUNaO0FBR0Y7QUFBbUI7QUFBUSxJQUp6QixVQUFTLElBQWE7QUFBSSxRQUN4QixPQUFPLElBQUksRUFBRSxDQUFDO0FBQ2xCLElBQUUsQ0FBQzs2REFSRixVQUFVOzs7O2dEQUNMO0FBQUMsSUFRUCxnQ0FBQztBQUNBLENBREEsQUFURCxJQVNDOztBQWJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFJQSxBQUFBLEFBU0EsQUFBQSxBQVBBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQVJBLEFBQUEsQUFTQSxBQUFBLEFBQUEsQUFUQSxBQVNBLEFBUkEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IE5neHNFeGVjdXRpb25TdHJhdGVneSB9IGZyb20gJy4vc3ltYm9scyc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBOb29wTmd4c0V4ZWN1dGlvblN0cmF0ZWd5IGltcGxlbWVudHMgTmd4c0V4ZWN1dGlvblN0cmF0ZWd5IHtcclxuICBlbnRlcjxUPihmdW5jOiAoKSA9PiBUKTogVCB7XHJcbiAgICByZXR1cm4gZnVuYygpO1xyXG4gIH1cclxuXHJcbiAgbGVhdmU8VD4oZnVuYzogKCkgPT4gVCk6IFQge1xyXG4gICAgcmV0dXJuIGZ1bmMoKTtcclxuICB9XHJcbn1cclxuIl19