/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { NgxsModule, Action, Store, State, Select, SelectorOptions, Actions, getSelectorMetadata, getStoreMetadata, ensureStoreMetadata, ensureSelectorMetadata, ofAction, ofActionDispatched, ofActionSuccessful, ofActionCanceled, ofActionErrored, ofActionCompleted, NgxsSimpleChange, Selector, getActionTypeFromInstance, actionMatcher, createSelector, NoopNgxsExecutionStrategy, StateToken, NGXS_PLUGINS, StateStream, setValue, getValue, InitState, UpdateState } from './index';
export { InternalActions as ɵb, OrderedSubject as ɵa } from './src/actions-stream';
export { SelectFactory as ɵba } from './src/decorators/select/select-factory';
export { DispatchOutsideZoneNgxsExecutionStrategy as ɵbd } from './src/execution/dispatch-outside-zone-ngxs-execution-strategy';
export { InternalNgxsExecutionStrategy as ɵr } from './src/execution/internal-ngxs-execution-strategy';
export { NGXS_EXECUTION_STRATEGY as ɵj } from './src/execution/symbols';
export { HostEnvironment as ɵt } from './src/host-environment/host-environment';
export { ConfigValidator as ɵs } from './src/internal/config-validator';
export { InternalDispatchedActionResults as ɵm, InternalDispatcher as ɵn } from './src/internal/dispatcher';
export { ensureSelectorMetadata as ɵy, ensureStoreMetadata as ɵw, getSelectorMetadata as ɵz, getStoreMetadata as ɵx } from './src/internal/internals';
export { LifecycleStateManager as ɵbb } from './src/internal/lifecycle-state-manager';
export { StateContextFactory as ɵo } from './src/internal/state-context-factory';
export { StateFactory as ɵl } from './src/internal/state-factory';
export { InternalStateOperations as ɵp } from './src/internal/state-operations';
export { NgxsFeatureModule as ɵbc } from './src/modules/ngxs-feature.module';
export { NgxsRootModule as ɵk } from './src/modules/ngxs-root.module';
export { PluginManager as ɵq } from './src/plugin-manager';
export { FEATURE_STATE_TOKEN as ɵd, NG_DEV_MODE as ɵf, NG_TEST_MODE as ɵe, NgxsConfig as ɵh, ROOT_STATE_TOKEN as ɵc, SELECTOR_META_KEY as ɵg } from './src/symbols';
export { mergeDeep as ɵi } from './src/utils/utils';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4cy1zdG9yZS5qcyIsInNvdXJjZXMiOlsibmc6L0BuZ3hzL3N0b3JlL25neHMtc3RvcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBLG1kQUFjLFNBQVMsQ0FBQztBQUV4QixPQUFPLEVBQUMsZUFBZSxJQUFJLEVBQUUsRUFBQyxjQUFjLElBQUksRUFBRSxFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDaEYsT0FBTyxFQUFDLGFBQWEsSUFBSSxHQUFHLEVBQUMsTUFBTSx3Q0FBd0MsQ0FBQztBQUM1RSxPQUFPLEVBQUMsd0NBQXdDLElBQUksR0FBRyxFQUFDLE1BQU0sK0RBQStELENBQUM7QUFDOUgsT0FBTyxFQUFDLDZCQUE2QixJQUFJLEVBQUUsRUFBQyxNQUFNLGtEQUFrRCxDQUFDO0FBQ3JHLE9BQU8sRUFBQyx1QkFBdUIsSUFBSSxFQUFFLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUN0RSxPQUFPLEVBQUMsZUFBZSxJQUFJLEVBQUUsRUFBQyxNQUFNLHlDQUF5QyxDQUFDO0FBQzlFLE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLE1BQU0saUNBQWlDLENBQUM7QUFDdEUsT0FBTyxFQUFDLCtCQUErQixJQUFJLEVBQUUsRUFBQyxrQkFBa0IsSUFBSSxFQUFFLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUN6RyxPQUFPLEVBQXlDLHNCQUFzQixJQUFJLEVBQUUsRUFBQyxtQkFBbUIsSUFBSSxFQUFFLEVBQUMsbUJBQW1CLElBQUksRUFBRSxFQUFDLGdCQUFnQixJQUFJLEVBQUUsRUFBQyxNQUFNLDBCQUEwQixDQUFDO0FBQ3pMLE9BQU8sRUFBQyxxQkFBcUIsSUFBSSxHQUFHLEVBQUMsTUFBTSx3Q0FBd0MsQ0FBQztBQUNwRixPQUFPLEVBQUMsbUJBQW1CLElBQUksRUFBRSxFQUFDLE1BQU0sc0NBQXNDLENBQUM7QUFDL0UsT0FBTyxFQUFDLFlBQVksSUFBSSxFQUFFLEVBQUMsTUFBTSw4QkFBOEIsQ0FBQztBQUNoRSxPQUFPLEVBQUMsdUJBQXVCLElBQUksRUFBRSxFQUFDLE1BQU0saUNBQWlDLENBQUM7QUFDOUUsT0FBTyxFQUFDLGlCQUFpQixJQUFJLEdBQUcsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBQzNFLE9BQU8sRUFBQyxjQUFjLElBQUksRUFBRSxFQUFDLE1BQU0sZ0NBQWdDLENBQUM7QUFDcEUsT0FBTyxFQUFDLGFBQWEsSUFBSSxFQUFFLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUV6RCxPQUFPLEVBQUMsbUJBQW1CLElBQUksRUFBRSxFQUFDLFdBQVcsSUFBSSxFQUFFLEVBQUMsWUFBWSxJQUFJLEVBQUUsRUFBQyxVQUFVLElBQUksRUFBRSxFQUFDLGdCQUFnQixJQUFJLEVBQUUsRUFBQyxpQkFBaUIsSUFBSSxFQUFFLEVBQUMsTUFBTSxlQUFlLENBQUM7O0FBbkJBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxuICovXG5cbmV4cG9ydCAqIGZyb20gJy4vaW5kZXgnO1xuXG5leHBvcnQge0ludGVybmFsQWN0aW9ucyBhcyDJtWIsT3JkZXJlZFN1YmplY3QgYXMgybVhfSBmcm9tICcuL3NyYy9hY3Rpb25zLXN0cmVhbSc7XG5leHBvcnQge1NlbGVjdEZhY3RvcnkgYXMgybViYX0gZnJvbSAnLi9zcmMvZGVjb3JhdG9ycy9zZWxlY3Qvc2VsZWN0LWZhY3RvcnknO1xuZXhwb3J0IHtEaXNwYXRjaE91dHNpZGVab25lTmd4c0V4ZWN1dGlvblN0cmF0ZWd5IGFzIMm1YmR9IGZyb20gJy4vc3JjL2V4ZWN1dGlvbi9kaXNwYXRjaC1vdXRzaWRlLXpvbmUtbmd4cy1leGVjdXRpb24tc3RyYXRlZ3knO1xuZXhwb3J0IHtJbnRlcm5hbE5neHNFeGVjdXRpb25TdHJhdGVneSBhcyDJtXJ9IGZyb20gJy4vc3JjL2V4ZWN1dGlvbi9pbnRlcm5hbC1uZ3hzLWV4ZWN1dGlvbi1zdHJhdGVneSc7XG5leHBvcnQge05HWFNfRVhFQ1VUSU9OX1NUUkFURUdZIGFzIMm1an0gZnJvbSAnLi9zcmMvZXhlY3V0aW9uL3N5bWJvbHMnO1xuZXhwb3J0IHtIb3N0RW52aXJvbm1lbnQgYXMgybV0fSBmcm9tICcuL3NyYy9ob3N0LWVudmlyb25tZW50L2hvc3QtZW52aXJvbm1lbnQnO1xuZXhwb3J0IHtDb25maWdWYWxpZGF0b3IgYXMgybVzfSBmcm9tICcuL3NyYy9pbnRlcm5hbC9jb25maWctdmFsaWRhdG9yJztcbmV4cG9ydCB7SW50ZXJuYWxEaXNwYXRjaGVkQWN0aW9uUmVzdWx0cyBhcyDJtW0sSW50ZXJuYWxEaXNwYXRjaGVyIGFzIMm1bn0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvZGlzcGF0Y2hlcic7XG5leHBvcnQge0NhbGxiYWNrIGFzIMm1dixTdGF0ZUNsYXNzSW50ZXJuYWwgYXMgybV1LGVuc3VyZVNlbGVjdG9yTWV0YWRhdGEgYXMgybV5LGVuc3VyZVN0b3JlTWV0YWRhdGEgYXMgybV3LGdldFNlbGVjdG9yTWV0YWRhdGEgYXMgybV6LGdldFN0b3JlTWV0YWRhdGEgYXMgybV4fSBmcm9tICcuL3NyYy9pbnRlcm5hbC9pbnRlcm5hbHMnO1xuZXhwb3J0IHtMaWZlY3ljbGVTdGF0ZU1hbmFnZXIgYXMgybViYn0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvbGlmZWN5Y2xlLXN0YXRlLW1hbmFnZXInO1xuZXhwb3J0IHtTdGF0ZUNvbnRleHRGYWN0b3J5IGFzIMm1b30gZnJvbSAnLi9zcmMvaW50ZXJuYWwvc3RhdGUtY29udGV4dC1mYWN0b3J5JztcbmV4cG9ydCB7U3RhdGVGYWN0b3J5IGFzIMm1bH0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvc3RhdGUtZmFjdG9yeSc7XG5leHBvcnQge0ludGVybmFsU3RhdGVPcGVyYXRpb25zIGFzIMm1cH0gZnJvbSAnLi9zcmMvaW50ZXJuYWwvc3RhdGUtb3BlcmF0aW9ucyc7XG5leHBvcnQge05neHNGZWF0dXJlTW9kdWxlIGFzIMm1YmN9IGZyb20gJy4vc3JjL21vZHVsZXMvbmd4cy1mZWF0dXJlLm1vZHVsZSc7XG5leHBvcnQge05neHNSb290TW9kdWxlIGFzIMm1a30gZnJvbSAnLi9zcmMvbW9kdWxlcy9uZ3hzLXJvb3QubW9kdWxlJztcbmV4cG9ydCB7UGx1Z2luTWFuYWdlciBhcyDJtXF9IGZyb20gJy4vc3JjL3BsdWdpbi1tYW5hZ2VyJztcbmV4cG9ydCB7VG9rZW5OYW1lIGFzIMm1YmV9IGZyb20gJy4vc3JjL3N0YXRlLXRva2VuL3N5bWJvbHMnO1xuZXhwb3J0IHtGRUFUVVJFX1NUQVRFX1RPS0VOIGFzIMm1ZCxOR19ERVZfTU9ERSBhcyDJtWYsTkdfVEVTVF9NT0RFIGFzIMm1ZSxOZ3hzQ29uZmlnIGFzIMm1aCxST09UX1NUQVRFX1RPS0VOIGFzIMm1YyxTRUxFQ1RPUl9NRVRBX0tFWSBhcyDJtWd9IGZyb20gJy4vc3JjL3N5bWJvbHMnO1xuZXhwb3J0IHttZXJnZURlZXAgYXMgybVpfSBmcm9tICcuL3NyYy91dGlscy91dGlscyc7Il19